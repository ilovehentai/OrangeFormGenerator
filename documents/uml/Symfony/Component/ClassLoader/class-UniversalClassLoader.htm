<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
	<title>class UniversalClassLoader</title>
	<link type="text/css" rel="stylesheet" href="../../../$resources/style.css"/>
	<script type="text/javascript" language="javascript" src="../../../$resources/treeview.js"></script>
</head>
<body onload="toggler.setupTreeView('MainList');toggler.backToMemorizedState('MainList', 'btnToggle')">
	<ul class="navig">
	<li><a href="javascript:toggler.toggleAll('MainList', 'btnToggle')" class="expandAllBtn" id="btnToggle">Expand all</a></li><li><a href="../../../help.htm" class="helpBtn">Help</a></li><li><a href="../../../index-all.htm" class="indexAllBtn">Index</a></li><li><a href="class-MapClassLoader.htm" class="left">Prev class</a></li><li><a href="package-summary.htm" class="top">Package</a></li>
	</ul>
	<h1 class="class">UniversalClassLoader</h1>
	<div id="MainList">
	<div class="description"><p>Class <span class="title">Symfony\Component\ClassLoader\UniversalClassLoader</span></p><ul class="description"><li>UniversalClassLoader implements a &quot;universal&quot; autoloader for PHP 5.3.<br />
<br />
It is able to load classes that use either:<br />
<br />
* The technical interoperability standards for PHP 5.3 namespaces and class names (http://groups.google.com/group/php-standards/web/psr-0-final-proposal); <br />
* The PEAR naming convention for classes (http://pear.php.net/).<br />
<br />
Classes from a sub-namespace or a sub-hierarchy of PEAR classes can be looked for in a list of locations to ease the vendoring of a sub-set of classes for large projects.<br />
<br />
Example usage:<br />
<br />
$loader = new UniversalClassLoader(); <br />
// register classes with namespaces $loader-&gt;registerNamespaces(array( 'Symfony\Component' =&gt; __DIR__.'/component', 'Symfony'           =&gt; __DIR__.'/framework', 'Sensio'            =&gt; array(__DIR__.'/src', __DIR__.'/vendor'), )); <br />
// register a library using the PEAR naming convention $loader-&gt;registerPrefixes(array( 'Swift_' =&gt; __DIR__.'/Swift', )); <br />
<br />
// to enable searching the include path (eg. for PEAR packages) $loader-&gt;useIncludePath(true); <br />
// activate the autoloader $loader-&gt;register(); <br />
In this example, if you try to use a class in the Symfony\Component namespace or one of its children (Symfony\Component\Console for instance), the autoloader will first look for the class under the component/ directory, and it will then fallback to the framework/ directory if not found before giving up.</li><li class="smaller">@author Fabien Potencier &lt;fabien@symfony.com&gt;</li><li class="smaller">@api </li><li>All subclasses: <a href="../../../Symfony/Component/ClassLoader/class-ApcUniversalClassLoader.htm" class="link2">Symfony\Component\ClassLoader\ApcUniversalClassLoader</a>, <a href="../../../Symfony/Component/ClassLoader/class-DebugUniversalClassLoader.htm" class="link2">Symfony\Component\ClassLoader\DebugUniversalClassLoader</a></li><li>File: Vendors/Symfony/Component/ClassLoader/UniversalClassLoader.php</li></ul></div><h2>Properties</h2><ul class="summary"><li class="Collapsed" id="namespaces"><a href="javascript:void(0);" class="property-pri" target="main">$namespaces</a><ul class="description"><li>Private <a href="../../../datatype-array.htm" class="link">array</a> <span class="smallTitle">$namespaces</span><span class="defVal"> = array()</span></li></ul></li><li class="Collapsed" id="prefixes"><a href="javascript:void(0);" class="property-pri" target="main">$prefixes</a><ul class="description"><li>Private <a href="../../../datatype-array.htm" class="link">array</a> <span class="smallTitle">$prefixes</span><span class="defVal"> = array()</span></li></ul></li><li class="Collapsed" id="namespaceFallbacks"><a href="javascript:void(0);" class="property-pri" target="main">$namespaceFallbacks</a><ul class="description"><li>Private <a href="../../../datatype-array.htm" class="link">array</a> <span class="smallTitle">$namespaceFallbacks</span><span class="defVal"> = array()</span></li></ul></li><li class="Collapsed" id="prefixFallbacks"><a href="javascript:void(0);" class="property-pri" target="main">$prefixFallbacks</a><ul class="description"><li>Private <a href="../../../datatype-array.htm" class="link">array</a> <span class="smallTitle">$prefixFallbacks</span><span class="defVal"> = array()</span></li></ul></li><li class="Collapsed" id="useIncludePath"><a href="javascript:void(0);" class="property-pri" target="main">$useIncludePath</a><ul class="description"><li>Private <a href="../../../datatype-bool.htm" class="link">bool</a> <span class="smallTitle">$useIncludePath</span><span class="defVal"> = false</span></li></ul></li></ul><h2>Functions</h2><ul class="summary"><li class="Collapsed" id="f4e91e8b5aee49"><a href="javascript:void(0);" class="method-pub" target="main">useIncludePath</a>(<a href="../../../datatype-boolean.htm" class="link">boolean</a> $useIncludePath)<ul class="description"><li>Public <a href="../../../datatype-void.htm" class="link">void</a> <span class="smallTitle">useIncludePath</span>(<a href="../../../datatype-boolean.htm" class="link">boolean</a> $useIncludePath)</li><li>Turns on searching the include for class files. Allows easy loading of installed PEAR packages</li><li class="smaller">@param Boolean $useIncludePath</li></ul></li><li class="Collapsed" id="f4e91e8b5af12d"><a href="javascript:void(0);" class="method-pub" target="main">getUseIncludePath</a>()<ul class="description"><li>Public <a href="../../../datatype-boolean.htm" class="link">boolean</a> <span class="smallTitle">getUseIncludePath</span>()</li><li>Can be used to check if the autoloader uses the include path to check for classes.</li></ul></li><li class="Collapsed" id="f4e91e8b5af3c1"><a href="javascript:void(0);" class="method-pub" target="main">getNamespaces</a>()<ul class="description"><li>Public <a href="../../../datatype-array.htm" class="link">array</a> <span class="smallTitle">getNamespaces</span>()</li><li>Gets the configured namespaces.</li><li class="smaller">@return array A hash with namespaces as keys and directories as values</li></ul></li><li class="Collapsed" id="f4e91e8b5af630"><a href="javascript:void(0);" class="method-pub" target="main">getPrefixes</a>()<ul class="description"><li>Public <a href="../../../datatype-array.htm" class="link">array</a> <span class="smallTitle">getPrefixes</span>()</li><li>Gets the configured class prefixes.</li><li class="smaller">@return array A hash with class prefixes as keys and directories as values</li></ul></li><li class="Collapsed" id="f4e91e8b5af895"><a href="javascript:void(0);" class="method-pub" target="main">getNamespaceFallbacks</a>()<ul class="description"><li>Public <a href="../../../datatype-array.htm" class="link">array</a> <span class="smallTitle">getNamespaceFallbacks</span>()</li><li>Gets the directory(ies) to use as a fallback for namespaces.</li><li class="smaller">@return array An array of directories</li></ul></li><li class="Collapsed" id="f4e91e8b5afbd9"><a href="javascript:void(0);" class="method-pub" target="main">getPrefixFallbacks</a>()<ul class="description"><li>Public <a href="../../../datatype-array.htm" class="link">array</a> <span class="smallTitle">getPrefixFallbacks</span>()</li><li>Gets the directory(ies) to use as a fallback for class prefixes.</li><li class="smaller">@return array An array of directories</li></ul></li><li class="Collapsed" id="f4e91e8b5aff36"><a href="javascript:void(0);" class="method-pub" target="main">registerNamespaceFallbacks</a>(<a href="../../../datatype-array.htm" class="link">array</a> $dirs)<ul class="description"><li>Public <a href="../../../datatype-void.htm" class="link">void</a> <span class="smallTitle">registerNamespaceFallbacks</span>(<a href="../../../datatype-array.htm" class="link">array</a> $dirs)</li><li>Registers the directory to use as a fallback for namespaces.</li><li class="smaller">@param array $dirs An array of directories</li><li class="smaller">@api </li></ul></li><li class="Collapsed" id="f4e91e8b5b0268"><a href="javascript:void(0);" class="method-pub" target="main">registerPrefixFallbacks</a>(<a href="../../../datatype-array.htm" class="link">array</a> $dirs)<ul class="description"><li>Public <a href="../../../datatype-void.htm" class="link">void</a> <span class="smallTitle">registerPrefixFallbacks</span>(<a href="../../../datatype-array.htm" class="link">array</a> $dirs)</li><li>Registers the directory to use as a fallback for class prefixes.</li><li class="smaller">@param array $dirs An array of directories</li><li class="smaller">@api </li></ul></li><li class="Collapsed" id="f4e91e8b5b0576"><a href="javascript:void(0);" class="method-pub" target="main">registerNamespaces</a>(<a href="../../../datatype-array.htm" class="link">array</a> $namespaces)<ul class="description"><li>Public <a href="../../../datatype-void.htm" class="link">void</a> <span class="smallTitle">registerNamespaces</span>(<a href="../../../datatype-array.htm" class="link">array</a> $namespaces)</li><li>Registers an array of namespaces</li><li class="smaller">@param array $namespaces An array of namespaces (namespaces as keys and locations as values)</li><li class="smaller">@api </li></ul></li><li class="Collapsed" id="f4e91e8b5b0964"><a href="javascript:void(0);" class="method-pub" target="main">registerNamespace</a>(<a href="../../../datatype-string.htm" class="link">string</a> $namespace,<span class="link">array|string</span> $paths)<ul class="description"><li>Public <a href="../../../datatype-void.htm" class="link">void</a> <span class="smallTitle">registerNamespace</span>(<a href="../../../datatype-string.htm" class="link">string</a> $namespace,<span class="link">array|string</span> $paths)</li><li>Registers a namespace.</li><li class="smaller">@param string $namespace The namespace</li><li class="smaller">@param array|string $paths The location(s) of the namespace</li><li class="smaller">@api </li></ul></li><li class="Collapsed" id="f4e91e8b5b0d2d"><a href="javascript:void(0);" class="method-pub" target="main">registerPrefixes</a>(<a href="../../../datatype-array.htm" class="link">array</a> $classes)<ul class="description"><li>Public <a href="../../../datatype-void.htm" class="link">void</a> <span class="smallTitle">registerPrefixes</span>(<a href="../../../datatype-array.htm" class="link">array</a> $classes)</li><li>Registers an array of classes using the PEAR naming convention.</li><li class="smaller">@param array $classes An array of classes (prefixes as keys and locations as values)</li><li class="smaller">@api </li></ul></li><li class="Collapsed" id="f4e91e8b5b11bf"><a href="javascript:void(0);" class="method-pub" target="main">registerPrefix</a>(<a href="../../../datatype-string.htm" class="link">string</a> $prefix,<span class="link">array|string</span> $paths)<ul class="description"><li>Public <a href="../../../datatype-void.htm" class="link">void</a> <span class="smallTitle">registerPrefix</span>(<a href="../../../datatype-string.htm" class="link">string</a> $prefix,<span class="link">array|string</span> $paths)</li><li>Registers a set of classes using the PEAR naming convention.</li><li class="smaller">@param string $prefix The classes prefix</li><li class="smaller">@param array|string $paths The location(s) of the classes</li><li class="smaller">@api </li></ul></li><li class="Collapsed" id="f4e91e8b5b159c"><a href="javascript:void(0);" class="method-pub" target="main">register</a>(<a href="../../../datatype-bool.htm" class="link">bool</a> $prepend<span class="defVal"> = false</span>)<ul class="description"><li>Public <a href="../../../datatype-void.htm" class="link">void</a> <span class="smallTitle">register</span>(<a href="../../../datatype-bool.htm" class="link">bool</a> $prepend<span class="defVal"> = false</span>)</li><li>Registers this instance as an autoloader.</li><li class="smaller">@param Boolean $prepend Whether to prepend the autoloader or not</li><li class="smaller">@api </li></ul></li><li class="Collapsed" id="f4e91e8b5b1a22"><a href="javascript:void(0);" class="method-pub" target="main">loadClass</a>(<a href="../../../datatype-string.htm" class="link">string</a> $class)<ul class="description"><li>Public <a href="../../../datatype-void.htm" class="link">void</a> <span class="smallTitle">loadClass</span>(<a href="../../../datatype-string.htm" class="link">string</a> $class)</li><li>Loads the given class or interface.</li><li class="smaller">@param string $class The name of the class</li></ul></li><li class="Collapsed" id="f4e91e8b5b1e4c"><a href="javascript:void(0);" class="method-pub" target="main">findFile</a>(<a href="../../../datatype-string.htm" class="link">string</a> $class)<ul class="description"><li>Public <span class="link">string|null</span> <span class="smallTitle">findFile</span>(<a href="../../../datatype-string.htm" class="link">string</a> $class)</li><li>Finds the path to the file where the class is defined.</li><li class="smaller">@param string $class The name of the class</li><li class="smaller">@return string|null The path, if found</li></ul></li></ul>
	</div>
	<div id="footer">Documentation generated on Oct 9, 2011, 18:32:22 +0000 by <a href="http://pear.php.net/package/PHP_UML/" target="_new">PHP_UML</a></div>
</body>
</html>